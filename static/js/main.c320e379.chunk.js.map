{"version":3,"sources":["components/PeopleTable/PeopleTable.module.sass","components/Search/Search.module.sass","components/Pagination/Pagination.module.sass","pages/Home/Home.module.sass","store/users/types.ts","hooks/useTypedDispatch.ts","hooks/useTypedSelector.ts","store/users/selectors.ts","components/Pagination/Pagination.tsx","store/users/action-creators.ts","components/PeopleTable/PeopleTable.tsx","components/Search/Search.tsx","store/user-details/selectors.ts","store/user-details/types.ts","routes.tsx","pages/Home/Home.tsx","pages/Details.tsx","pages/NotFound.tsx","store/users/reducer.ts","store/user-details/reducer.ts","store/root-reducer.ts","store/users/sagas.ts","store/user-details/action-creators.ts","store/user-details/sagas.ts","store/root-saga.ts","store/types.ts","store/store.ts","index.tsx"],"names":["module","exports","Types","useTypedDispatch","useDispatch","useTypedSelector","useSelector","selectUsersReducer","state","users","Pagination","page","total","className","onChange","totalPages","Math","ceil","renderedPages","useMemo","Array","from","length","_","index","map","pageIndex","Type","onClick","Style","item","loadUsersRequest","payload","type","LOAD_USERS_REQUEST","loadUsersSuccess","LOAD_USERS_SUCCESS","loadUsersFailure","LOAD_USERS_FAILURE","PeopleTable","data","search","dispatch","renderedPeople","results","character","name","birth_year","eye_color","gender","hair_color","height","url","id","replaceAll","to","table","width","cellPadding","cellSpacing","pagination","count","newPage","Search","classNames","form","field","value","event","target","placeholder","selectUserDetailsReducer","userDetails","RouteNames","routes","path","exact","component","loading","error","skin_color","mass","getRouteConfig","route","find","props","Routes","renderRoutes","initialState","history","createBrowserHistory","rootReducer","combineReducers","action","LOAD_USER_DETAILS_REQUEST","LOAD_USER_DETAILS_SUCCESS","LOAD_USER_DETAILS_FAILURE","router","connectRouter","fetchPeopleList","loadUsersSaga","routeChangeSaga","usersSaga","cancelToken","call","axios","get","token","response","put","message","task","CancelToken","source","take","cancel","fork","LOCATION_CHANGE","pathname","location","matchPath","select","takeLatest","loadUserDetailsRequest","loadUsersDetailsSuccess","loadUsersDetailsFailure","loadUserDetailsSaga","userDetailsSaga","detailsPage","params","takeEvery","rootSaga","sagas","all","s","spawn","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","routerMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c320e379.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"PeopleTable_table__22ocg\",\"pagination\":\"PeopleTable_pagination__I9KWo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"Search_field__3xzE_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Pagination_item__1I3Sp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Home_search__7iOys\"};","import { User } from '../../models';\r\n\r\nexport enum Types {\r\n  LOAD_USERS_REQUEST = '@users/LOAD_USERS_REQUEST',\r\n  LOAD_USERS_SUCCESS = '@users/LOAD_USERS_SUCCESS',\r\n  LOAD_USERS_FAILURE = '@users/LOAD_USERS_FAILURE',\r\n}\r\n\r\nexport interface RequestPayload {\r\n  page: number;\r\n  search: string;\r\n}\r\n\r\nexport interface Response {\r\n  count: number;\r\n  next: string | null;\r\n  previous: string | null;\r\n  results: User[];\r\n}\r\n","import { useDispatch } from 'react-redux';\r\n\r\nimport { AppDispatch } from '../store';\r\n\r\nexport const useTypedDispatch = () => useDispatch<AppDispatch>();\r\n","import { useSelector, TypedUseSelectorHook } from 'react-redux';\r\nimport { RootState } from '../store';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","// import { createSelector } from 'reselect';\r\n\r\nimport { RootState } from '../root-reducer';\r\n\r\nexport const selectUsersReducer = (state: RootState) => state.users;\r\n\r\n// export const selectCartHidden = createSelector(\r\n//   selectPeopleReducer,\r\n//   (cart) => cart.hidden\r\n// );\r\n","import { FC, MouseEventHandler, useMemo } from 'react';\r\n\r\nimport Style from './Pagination.module.sass';\r\n\r\ninterface Props {\r\n  page: number;\r\n  total: number;\r\n  className: string;\r\n  onChange: (page: number) => void;\r\n}\r\n\r\nconst LIMIT = 10;\r\n\r\nexport const Pagination: FC<Props> = ({ page, total, className, onChange }) => {\r\n  const totalPages = Math.ceil(total / LIMIT);\r\n\r\n  const renderedPages = useMemo(\r\n    () =>\r\n      Array.from({ length: totalPages }, (_, index) => index + 1).map(\r\n        (pageIndex) => {\r\n          const Type = page === pageIndex ? 'strong' : 'span';\r\n          const hanleClick: MouseEventHandler<HTMLElement> = () => {\r\n            if (pageIndex !== page) {\r\n              onChange(pageIndex);\r\n            }\r\n          };\r\n\r\n          return (\r\n            <Type onClick={hanleClick} key={pageIndex} className={Style.item}>\r\n              {pageIndex}\r\n            </Type>\r\n          );\r\n        }\r\n      ),\r\n    [page, totalPages, onChange]\r\n  );\r\n\r\n  return <div className={className}>{renderedPages}</div>;\r\n};\r\n","import { Types, RequestPayload, Response } from './types';\r\nimport {\r\n  LoadUsersRequest,\r\n  LoadUsersSuccess,\r\n  LoadUsersFailure,\r\n} from './actions';\r\n\r\nexport const loadUsersRequest = (payload: RequestPayload): LoadUsersRequest => {\r\n  return {\r\n    type: Types.LOAD_USERS_REQUEST,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const loadUsersSuccess = (payload: Response): LoadUsersSuccess => {\r\n  return {\r\n    type: Types.LOAD_USERS_SUCCESS,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const loadUsersFailure = (payload: string): LoadUsersFailure => {\r\n  return {\r\n    type: Types.LOAD_USERS_FAILURE,\r\n    payload,\r\n  };\r\n};\r\n","import { FC, useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Pagination } from '../Pagination';\r\n\r\nimport { useTypedSelector, useTypedDispatch } from '../../hooks';\r\nimport { selectUsersReducer } from '../../store/users/selectors';\r\nimport { loadUsersRequest } from '../../store/users/action-creators';\r\n\r\nimport Style from './PeopleTable.module.sass';\r\n\r\ninterface Props {}\r\n\r\nexport const PeopleTable: FC<Props> = () => {\r\n  const { data, page, search } = useTypedSelector(selectUsersReducer);\r\n  const dispatch = useTypedDispatch();\r\n\r\n  const renderedPeople = useMemo(() => {\r\n    if (!data) {\r\n      return null;\r\n    }\r\n\r\n    return data.results.map((character) => {\r\n      const { name, birth_year, eye_color, gender, hair_color, height, url } =\r\n        character;\r\n\r\n      const id = character.url.replaceAll(/\\D/g, '');\r\n\r\n      return (\r\n        <tr key={url}>\r\n          <td>{name}</td>\r\n          <td>{birth_year}</td>\r\n          <td>{eye_color}</td>\r\n          <td>{gender}</td>\r\n          <td>{hair_color}</td>\r\n          <td>{height}</td>\r\n          <td>\r\n            <Link to={`/people/${id}`}>Details</Link>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  }, [data]);\r\n\r\n  const handlePageChange = (newPage: number) => {\r\n    dispatch(loadUsersRequest({ page: newPage, search }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <table\r\n        className={Style.table}\r\n        width=\"100%\"\r\n        cellPadding={2}\r\n        cellSpacing={0}\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Birth year</th>\r\n            <th>Eye color</th>\r\n            <th>Gender</th>\r\n            <th>Hair color</th>\r\n            <th>Height</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderedPeople}</tbody>\r\n      </table>\r\n\r\n      <Pagination\r\n        className={Style.pagination}\r\n        page={page}\r\n        total={data ? data.count : 0}\r\n        onChange={handlePageChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { FC, ChangeEventHandler } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { useTypedSelector, useTypedDispatch } from '../../hooks';\r\nimport { loadUsersRequest } from '../../store/users/action-creators';\r\nimport { selectUsersReducer } from '../../store/users/selectors';\r\n\r\nimport Style from './Search.module.sass';\r\n\r\ninterface Props {\r\n  className?: string;\r\n}\r\n\r\nexport const Search: FC<Props> = ({ className }) => {\r\n  const { search } = useTypedSelector(selectUsersReducer);\r\n  const dispatch = useTypedDispatch();\r\n\r\n  const handleChange: ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    dispatch(\r\n      loadUsersRequest({\r\n        page: 1,\r\n        search: event.target.value,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <form className={classNames(Style.form, className)}>\r\n      <input\r\n        className={Style.field}\r\n        value={search}\r\n        onChange={handleChange}\r\n        placeholder=\"Search people...\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","// import { createSelector } from 'reselect';\r\n\r\nimport { RootState } from '../root-reducer';\r\n\r\nexport const selectUserDetailsReducer = (state: RootState) => state.userDetails;\r\n\r\n// export const selectCartHidden = createSelector(\r\n//   selectPeopleReducer,\r\n//   (cart) => cart.hidden\r\n// );\r\n","export enum Types {\r\n  LOAD_USER_DETAILS_REQUEST = '@user-details/LOAD_USER_DETAILS_REQUEST',\r\n  LOAD_USER_DETAILS_SUCCESS = '@user-details/LOAD_USER_DETAILS_SUCCESS',\r\n  LOAD_USER_DETAILS_FAILURE = '@user-details/LOAD_USER_DETAILS_FAILURE',\r\n}\r\n","import { FC, useMemo } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport { Home } from './pages/Home';\r\nimport { Details } from './pages/Details';\r\nimport { NotFound } from './pages/NotFound';\r\n\r\ninterface RouteList {\r\n  id: string;\r\n  path?: string;\r\n  component: FC;\r\n  exact?: boolean;\r\n}\r\n\r\nexport const RouteNames = {\r\n  MAIN_ROUTE: 'MAIN_ROUTE',\r\n  USER_DETAILS_ROUTE: 'USER_DETAILS_ROUTE',\r\n  NOT_FOUND_ROUTE: 'NOT_FOUND_ROUTE',\r\n};\r\n\r\nconst routes: RouteList[] = [\r\n  {\r\n    id: RouteNames.MAIN_ROUTE,\r\n    path: '/',\r\n    exact: true,\r\n    component: Home,\r\n  },\r\n  {\r\n    id: RouteNames.USER_DETAILS_ROUTE,\r\n    path: '/people/:id',\r\n    exact: true,\r\n    component: Details,\r\n  },\r\n  {\r\n    id: RouteNames.NOT_FOUND_ROUTE,\r\n    exact: true,\r\n    component: NotFound,\r\n  },\r\n];\r\n\r\nexport const getRouteConfig = (id: string) => {\r\n  const route = routes.find((route) => route.id === id);\r\n\r\n  if (route) {\r\n    const { component, ...props } = route;\r\n\r\n    return { ...props };\r\n  }\r\n\r\n  return {};\r\n};\r\n\r\nexport const Routes: FC = () => {\r\n  const renderRoutes = useMemo(() => {\r\n    return routes.map((route) => {\r\n      const { id, ...props } = route;\r\n\r\n      return <Route key={id} {...props} />;\r\n    });\r\n  }, []);\r\n\r\n  return <Switch>{renderRoutes}</Switch>;\r\n};\r\n","import { FC } from 'react';\r\n\r\nimport { useTypedSelector } from '../../hooks';\r\nimport { selectUsersReducer } from '../../store/users/selectors';\r\n\r\nimport { PeopleTable } from '../../components/PeopleTable';\r\nimport { Search } from '../../components/Search';\r\n\r\nimport Style from './Home.module.sass';\r\n\r\nexport const Home: FC = () => {\r\n  const { loading, error } = useTypedSelector(selectUsersReducer);\r\n\r\n  const renderedContent = () => {\r\n    if (loading) {\r\n      return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n      return (\r\n        <div>\r\n          Error: <p>{error}</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return <PeopleTable />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Star Wars People</h1>\r\n\r\n      <Search className={Style.search} />\r\n\r\n      {renderedContent()}\r\n\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n","import { FC, useMemo } from 'react';\r\n\r\nimport { useTypedSelector } from '../hooks';\r\nimport { selectUserDetailsReducer } from '../store/user-details/selectors';\r\n\r\nexport const Details: FC = () => {\r\n  const { data, loading, error } = useTypedSelector(selectUserDetailsReducer);\r\n\r\n  const userDetails = useMemo(() => {\r\n    if (!data) {\r\n      return null;\r\n    }\r\n\r\n    const { name, birth_year, skin_color, mass } = data;\r\n\r\n    return (\r\n      <>\r\n        <h1>{name}</h1>\r\n        <h4>{birth_year}</h4>\r\n        <p>Skin: ${skin_color}</p>\r\n        <p>Mass: ${mass}</p>\r\n      </>\r\n    );\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div>\r\n        Error: <p>{error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <div>{userDetails}</div>;\r\n};\r\n","export function NotFound() {\r\n  return <div>404 Not Found</div>;\r\n}\r\n","import { Action } from '../root-action';\r\nimport { Types, RequestPayload, Response } from './types';\r\n\r\ninterface PeopleState {\r\n  page: number;\r\n  search: string;\r\n  loading: boolean;\r\n  error: string | null;\r\n  data: Response | null;\r\n}\r\n\r\nconst initialState: PeopleState = {\r\n  page: 1,\r\n  search: '',\r\n  loading: false,\r\n  error: null,\r\n  data: null,\r\n};\r\n\r\nconst loadUsersRequest = (\r\n  state: PeopleState,\r\n  { page, search }: RequestPayload\r\n) => ({\r\n  ...state,\r\n  loading: true,\r\n  page,\r\n  search,\r\n});\r\n\r\nexport const reducer = (state = initialState, action: Action): PeopleState => {\r\n  switch (action.type) {\r\n    case Types.LOAD_USERS_REQUEST:\r\n      return loadUsersRequest(state, action.payload);\r\n\r\n    case Types.LOAD_USERS_SUCCESS:\r\n      return { ...state, loading: false, data: action.payload, error: null };\r\n\r\n    case Types.LOAD_USERS_FAILURE:\r\n      return { ...state, loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Action } from '../root-action';\r\nimport { Types } from './types';\r\n\r\nimport { User } from '../../models';\r\n\r\ninterface PeopleDetailsState {\r\n  loading: boolean;\r\n  error: string | null;\r\n  data: User | null;\r\n}\r\n\r\nconst initialState: PeopleDetailsState = {\r\n  loading: false,\r\n  error: null,\r\n  data: null,\r\n};\r\n\r\nexport const reducer = (\r\n  state = initialState,\r\n  action: Action\r\n): PeopleDetailsState => {\r\n  switch (action.type) {\r\n    case Types.LOAD_USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case Types.LOAD_USER_DETAILS_SUCCESS:\r\n      return { ...state, loading: false, data: action.payload, error: null };\r\n\r\n    case Types.LOAD_USER_DETAILS_FAILURE:\r\n      return { ...state, loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport { reducer as users } from './users/reducer';\r\nimport { reducer as userDetails } from './user-details/reducer';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst rootReducer = combineReducers({\r\n  users,\r\n  userDetails,\r\n  router: connectRouter(history),\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport { rootReducer };\r\n","import axios, { AxiosResponse, CancelTokenSource } from 'axios';\r\nimport {\r\n  call,\r\n  put,\r\n  take,\r\n  fork,\r\n  select,\r\n  cancel,\r\n  takeLatest,\r\n} from 'redux-saga/effects';\r\nimport { LOCATION_CHANGE, LocationChangeAction } from 'connected-react-router';\r\nimport { matchPath } from 'react-router';\r\nimport { Task } from 'redux-saga';\r\n\r\nimport {\r\n  loadUsersRequest,\r\n  loadUsersSuccess,\r\n  loadUsersFailure,\r\n} from './action-creators';\r\nimport { selectUsersReducer } from './selectors';\r\nimport { RouteNames, getRouteConfig } from '../../routes';\r\nimport { LoadUsersRequest } from './actions';\r\nimport { Types, Response } from './types';\r\n\r\ninterface Payload {\r\n  page: number;\r\n  search: string;\r\n  cancelToken: CancelTokenSource;\r\n}\r\n\r\nfunction* fetchPeopleList(payload: Payload) {\r\n  try {\r\n    const { page, search, cancelToken } = payload;\r\n    const url = `https://swapi.dev/api/people?page=${page}&search=${search}`;\r\n\r\n    const response: AxiosResponse<Response> = yield call(axios.get, url, {\r\n      cancelToken: cancelToken.token,\r\n    });\r\n\r\n    yield put(loadUsersSuccess(response.data));\r\n  } catch (err) {\r\n    yield put(loadUsersFailure((err as Error).message));\r\n  }\r\n}\r\n\r\nexport function* loadUsersSaga() {\r\n  let task: Task | null = null;\r\n  let cancelToken = axios.CancelToken.source();\r\n\r\n  while (true) {\r\n    const { payload }: LoadUsersRequest = yield take(Types.LOAD_USERS_REQUEST);\r\n\r\n    if (task) {\r\n      cancelToken.cancel();\r\n      yield cancel(task);\r\n      cancelToken = axios.CancelToken.source();\r\n    }\r\n\r\n    task = yield fork(fetchPeopleList, { ...payload, cancelToken });\r\n  }\r\n}\r\n\r\nfunction* routeChangeSaga() {\r\n  while (true) {\r\n    const action: LocationChangeAction = yield take(LOCATION_CHANGE);\r\n    const { pathname } = action.payload.location;\r\n\r\n    if (matchPath(pathname, getRouteConfig(RouteNames.MAIN_ROUTE))) {\r\n      const { page, search } = yield select(selectUsersReducer);\r\n\r\n      yield put(loadUsersRequest({ page, search }));\r\n    }\r\n  }\r\n}\r\n\r\nexport function* usersSaga() {\r\n  yield fork(routeChangeSaga);\r\n  yield takeLatest;\r\n}\r\n","import { Types } from './types';\r\nimport {\r\n  LoadUserDetailsRequest,\r\n  LoadUserDetailsSuccess,\r\n  LoadUserDetailsFailure,\r\n} from './actions';\r\nimport { User } from '../../models';\r\n\r\nexport const loadUserDetailsRequest = (id: string): LoadUserDetailsRequest => {\r\n  return {\r\n    type: Types.LOAD_USER_DETAILS_REQUEST,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const loadUsersDetailsSuccess = (\r\n  payload: User\r\n): LoadUserDetailsSuccess => {\r\n  return {\r\n    type: Types.LOAD_USER_DETAILS_SUCCESS,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const loadUsersDetailsFailure = (\r\n  payload: string\r\n): LoadUserDetailsFailure => {\r\n  return {\r\n    type: Types.LOAD_USER_DETAILS_FAILURE,\r\n    payload,\r\n  };\r\n};\r\n","import axios, { AxiosResponse } from 'axios';\r\nimport { call, put, take, fork, takeEvery } from 'redux-saga/effects';\r\nimport { LOCATION_CHANGE, LocationChangeAction } from 'connected-react-router';\r\nimport { matchPath } from 'react-router';\r\n\r\nimport {\r\n  loadUserDetailsRequest,\r\n  loadUsersDetailsSuccess,\r\n  loadUsersDetailsFailure,\r\n} from './action-creators';\r\nimport { LoadUserDetailsRequest } from './actions';\r\nimport { RouteNames, getRouteConfig } from '../../routes';\r\nimport { Types } from './types';\r\nimport { User } from '../../models';\r\n\r\nexport function* loadUserDetailsSaga({ payload }: LoadUserDetailsRequest) {\r\n  try {\r\n    const url = `https://swapi.dev/api/people/${payload}`;\r\n\r\n    const response: AxiosResponse<User> = yield call(axios.get, url);\r\n\r\n    yield put(loadUsersDetailsSuccess(response.data));\r\n  } catch (err) {\r\n    yield put(loadUsersDetailsFailure((err as Error).message));\r\n  }\r\n}\r\n\r\nfunction* routeChangeSaga() {\r\n  while (true) {\r\n    const action: LocationChangeAction = yield take(LOCATION_CHANGE);\r\n    const { pathname } = action.payload.location;\r\n\r\n    const detailsPage = matchPath<{ id: string }>(\r\n      pathname,\r\n      getRouteConfig(RouteNames.USER_DETAILS_ROUTE)\r\n    );\r\n\r\n    if (detailsPage) {\r\n      const { id } = detailsPage.params;\r\n\r\n      yield put(loadUserDetailsRequest(id));\r\n    }\r\n  }\r\n}\r\n\r\nexport function* userDetailsSaga() {\r\n  yield fork(routeChangeSaga);\r\n  yield takeEvery(Types.LOAD_USER_DETAILS_REQUEST, loadUserDetailsSaga);\r\n}\r\n","import { all, spawn } from 'redux-saga/effects';\r\n\r\nimport { usersSaga, loadUsersSaga } from './users/sagas';\r\nimport { userDetailsSaga } from './user-details/sagas';\r\n\r\nexport function* rootSaga() {\r\n  const sagas = [usersSaga, loadUsersSaga, userDetailsSaga];\r\n\r\n  yield all(sagas.map((s) => spawn(s)));\r\n}\r\n","import { compose } from 'redux';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nexport const composeEnhancers =\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { routerMiddleware } from 'connected-react-router';\r\n\r\nimport { rootReducer, history } from './root-reducer';\r\nimport { rootSaga } from './root-saga';\r\nimport { composeEnhancers } from './types';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport { store };\r\n","// https://www.youtube.com/watch?v=ah5voE_SGjo\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\n\r\nimport { Routes } from './routes';\r\n\r\nimport { store } from './store';\r\nimport { history } from './store/root-reducer';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <Routes />\r\n    </ConnectedRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}